() send_grams(slice address, int amount) impure {
  cell msg = begin_cell()
    .store_uint (0x18, 6) ;; bounce
    .store_slice(address) ;; 267 bit address
    .store_grams(amount)
    .store_uint(0, 107) ;; 106 zeroes +  0 as an indicator that there is no cell with the data
    .end_cell(); 
  send_raw_message(msg, 3); ;; mode, 2 for ignoring errors, 1 for sender pays fees, 64 for returning inbound message value
}

cell pack_metadata_value(slice a) inline {
    return begin_cell().store_uint(0, 8).store_slice(a).end_cell();
}

slice encode_number_to_text(int decimals, int radix) {
    builder str = begin_cell();
    int ctr  = 0;
    tuple chars =  empty_tuple();

    do {
        (decimals, int rem) = decimals /% radix;

        chars~tpush( rem >= 10 ? 87 + rem : 48 + rem);
        ctr += 1;
    } until (decimals == 0);

    repeat( ctr ) {
        str     = str.store_uint(chars.at(ctr - 1), 8);
        ctr    -= 1;
    }

    return str.end_cell().begin_parse();
}
